{"version":3,"file":"static/js/672.68cc98f1.chunk.js","mappings":"iNACA,GAAgB,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,yBAAyB,WAAa,6B,mBCiBrK,EAdmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,iBAAKC,UAAWC,EAAAA,OAAhB,WACI,gBAAKC,IAAKL,EAAMM,UAChB,iBAAKH,UAAWC,EAAAA,YAAhB,WACI,SAAC,KAAD,CAASG,GAAIN,EAAME,UAAWC,EAAAA,WAA9B,SAA6CJ,EAAMQ,QACnD,cAAGL,UAAWC,EAAAA,QAAd,SAA0BJ,EAAMS,iBCoChD,G,uBArCgB,SAACT,GAGb,IAAIU,EAAkBV,EAAMW,QAAQC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAYJ,QAASI,EAAOJ,QAASD,KAAMK,EAAOL,KAAsBN,GAAIW,EAAOX,GAAII,OAAQO,EAAOP,QAAzCO,EAAOX,OAItH,OACI,gBAAKC,UAAWC,EAAAA,QAAhB,UACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACSM,Q,wCCarB,GA1B+BI,EAAAA,WA0BhBC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAdkB,SAACC,GACnB,MAAO,CACHN,QAASM,EAAMC,eAAeP,QAC9BQ,SAAUF,EAAMC,eAAeC,aAGd,SAACC,GACtB,MAAO,CACHC,YAAa,SAACC,GACVF,GAASG,EAAAA,EAAAA,GAAmBD,SAMpCE,EAAAA,EAFJ,CAGKC","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ZfVT7\",\"dialog\":\"Dialogs_dialog__oP4q9\",\"active\":\"Dialogs_active__jisPj\",\"message\":\"Dialogs_message__d7QnV\",\"dialogName\":\"Dialogs_dialogName__BYhZG\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={props.avatar}></img>\r\n            <div className={s.nameMessage}>\r\n                <NavLink to={path} className={s.dialogName}>{props.name}</NavLink>\r\n                <p className={s.message}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Formik, useField, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup';\r\nimport styles from '../login/Login.module.css'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let dialogsElements = props.dialogs.map(dialog => <DialogItem message={dialog.message} name={dialog.name} key={dialog.id} id={dialog.id} avatar={dialog.avatar} />)\r\n    \r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ messageBody: '' }}\r\n            onSubmit={(values) => {\r\n                props.sendMessage(values.messageBody)\r\n            }}\r\n            validationSchema={Yup.object({\r\n                messageBody: Yup.string().max(100, 'Must be 100 characters or less').required('Required')\r\n            })}>\r\n            <Form>\r\n                <Field name=\"messageBody\" as=\"textarea\" />\r\n                <ErrorMessage name=\"messageBody\" className={styles.loginErrors} />\r\n                <div className=\"\">\r\n                    <button type=\"submit\">Send</button>\r\n                </div>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n\r\n}\r\nexport default Dialogs","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport  { sendMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass DialogsContainer extends React.Component {\r\n\r\n    \r\n    render() {\r\n       \r\n        return (\r\n            <Dialogs  {...this.props} dialogs={this.props.dialogs}  \r\n            messages={this.props.messages}\r\n            newMessageBody = {this.props.newMessageBody}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsReducer.dialogs,\r\n        messages: state.dialogsReducer.messages,  \r\n}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (values) => {\r\n            dispatch(sendMessageCreator(values))\r\n        }\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps), \r\n    withAuthRedirect)\r\n    (Dialogs)"],"names":["props","path","id","className","s","src","avatar","to","name","message","dialogsElements","dialogs","map","dialog","React","compose","connect","state","dialogsReducer","messages","dispatch","sendMessage","values","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}